{"version":3,"sources":["login.js","ProductManagement.js","Dashboard.js","UserManagement.js","App.js","reportWebVitals.js","index.js"],"names":["loginContainerStyle","display","justifyContent","alignItems","height","backgroundColor","formContainerStyle","flexDirection","padding","maxWidth","width","border","borderRadius","boxShadow","headingStyle","fontSize","marginBottom","textAlign","formStyle","inputStyle","outline","transition","buttonStyle","color","cursor","errorMessageStyle","marginTop","toggleButtonStyle","Login","_ref","setActiveUser","users","setShowSection","showSection","username","setUsername","useState","password","setPassword","newUsername","setNewUsername","newPassword","setNewPassword","errorMessage","setErrorMessage","React","createElement","style","onSubmit","e","preventDefault","usersList","JSON","parse","localStorage","getItem","some","u","push","setItem","stringify","alert","type","value","onChange","target","placeholder","required","user","find","onClick","Product","products","setProducts","product","setProduct","name","category","price","quantity","editingIndex","setEditingIndex","quantityChange","setQuantityChange","useEffect","fetchProducts","async","response","fetch","ok","Error","data","json","error","console","handleQuantityChange","index","changeType","quantityChangeValue","parseInt","isNaN","updatedQuantity","productId","id","method","headers","Content-Type","body","updatedProduct","updatedProducts","map","prod","idx","updateProductsState","resetForm","margin","actionButtonStyle","marginRight","borderCollapse","key","productToEdit","toString","handleEditProduct","filter","_","i","handleDeleteProduct","Dashboard","activeUser","setShowDashboard","totalQuantity","setTotalQuantity","lowStockProducts","setLowStockProducts","storedProducts","totalQty","reduce","sum","lowStock","chartData","labels","datasets","label","borderColor","borderWidth","length","Bar","options","responsive","plugins","legend","tooltip","enabled","callbacks","context","raw","scales","y","beginAtZero","title","text","x","Carousel","showThumbs","autoPlay","infiniteLoop","src","imageUrl","alt","className","UserManagement","setUsers","email","setEmail","storedUsers","boxSizing","userCardStyle","buttonContainerStyle","gap","handleAddOrUpdateUser","newUser","updatedUsers","listStyleType","paddingLeft","editUser","deleteUser","navStyle","logoutButtonStyle","App","loading","setLoading","navigate","useNavigate","fetchData","endpoint","setState","removeItem","logout","Routes","Route","path","element","Navigate","to","ProductManagement","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","Router"],"mappings":"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","file":"static/js/main.9f5f47a1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Login = ({ setActiveUser, users, setShowSection, showSection }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [newUsername, setNewUsername] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        \r\n        // Find the user based on the entered username and password\r\n        const user = users.find(u => u.username === username && u.password === password);\r\n\r\n        if (user) {\r\n            // Successful login, set the active user and save to localStorage\r\n            localStorage.setItem('loggedIn', 'true');\r\n            localStorage.setItem('activeUser', JSON.stringify(user)); // Save active user in localStorage\r\n            setActiveUser(user); // Update the active user state\r\n            setErrorMessage(''); // Clear error message\r\n        } else {\r\n            // Invalid credentials, show error message\r\n            setErrorMessage('Invalid username or password.');\r\n        }\r\n    };\r\n\r\n    const handleSignUp = (e) => {\r\n        e.preventDefault();\r\n        const usersList = JSON.parse(localStorage.getItem('users')) || [];\r\n\r\n        // Check if the username already exists\r\n        if (usersList.some(u => u.username === newUsername)) {\r\n            setErrorMessage('Username already exists. Please choose another.');\r\n            return;\r\n        }\r\n\r\n        // Add new user to the list and save to localStorage\r\n        usersList.push({ username: newUsername, password: newPassword });\r\n        localStorage.setItem('users', JSON.stringify(usersList));\r\n        alert(\"Sign-up successful! You can now log in.\");\r\n        setShowSection('login');\r\n    };\r\n\r\n    return (\r\n        <div style={loginContainerStyle}>\r\n            <div style={formContainerStyle}>\r\n                <h1 style={headingStyle}>{showSection === 'signUp' ? \"Sign Up\" : \"Login\"} to Wings Cafe Inventory System</h1>\r\n                {showSection === 'signUp' ? (\r\n                    <form onSubmit={handleSignUp} style={formStyle}>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={newUsername}\r\n                            onChange={(e) => setNewUsername(e.target.value)}\r\n                            placeholder=\"New Username\"\r\n                            required\r\n                            style={inputStyle}\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            value={newPassword}\r\n                            onChange={(e) => setNewPassword(e.target.value)}\r\n                            placeholder=\"New Password\"\r\n                            required\r\n                            style={inputStyle}\r\n                        />\r\n                        <button type=\"submit\" style={buttonStyle}>\r\n                            Sign Up\r\n                        </button>\r\n                        {errorMessage && <p style={errorMessageStyle}>{errorMessage}</p>}\r\n                    </form>\r\n                ) : (\r\n                    <form onSubmit={handleLogin} style={formStyle}>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                            placeholder=\"Username\"\r\n                            required\r\n                            style={inputStyle}\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            placeholder=\"Password\"\r\n                            required\r\n                            style={inputStyle}\r\n                        />\r\n                        <button type=\"submit\" style={buttonStyle}>\r\n                            Login\r\n                        </button>\r\n                        {errorMessage && <p style={errorMessageStyle}>{errorMessage}</p>}\r\n                    </form>\r\n                )}\r\n                <button onClick={() => setShowSection(showSection === 'login' ? 'signUp' : 'login')} style={toggleButtonStyle}>\r\n                    {showSection === 'signUp' ? \"Already a user? Log in here\" : \"New user? Sign Up here\"}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst loginContainerStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100vh', // Vertically center\r\n    backgroundColor: '#f4f4f4',\r\n};\r\n\r\nconst formContainerStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n    maxWidth: '400px',\r\n    width: '100%',\r\n    border: '1px solid #ccc',\r\n    borderRadius: '8px',\r\n    backgroundColor: '#fff',\r\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n};\r\n\r\nconst headingStyle = {\r\n    fontSize: '1.5em',\r\n    marginBottom: '10px',\r\n    textAlign: 'center',\r\n};\r\n\r\nconst formStyle = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n};\r\n\r\nconst inputStyle = {\r\n    marginBottom: '10px',\r\n    padding: '8px',\r\n    fontSize: '1em',\r\n    border: '1px solid #ccc',\r\n    borderRadius: '4px',\r\n    outline: 'none',\r\n    transition: 'border-color 0.3s',\r\n};\r\n\r\nconst buttonStyle = {\r\n    padding: '10px',\r\n    fontSize: '1em',\r\n    backgroundColor: '#4CAF50',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n    transition: 'background-color 0.3s',\r\n};\r\n\r\nconst errorMessageStyle = {\r\n    color: 'red',\r\n    marginTop: '10px',\r\n    fontSize: '0.9em',\r\n};\r\n\r\nconst toggleButtonStyle = {\r\n    marginTop: '20px',\r\n    padding: '8px',\r\n    fontSize: '1em',\r\n    backgroundColor: '#008CBA',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n    transition: 'background-color 0.3s',\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst Product = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [product, setProduct] = useState({ name: '', category: '', price: '', quantity: '' });\r\n    const [editingIndex, setEditingIndex] = useState(null);\r\n    const [quantityChange, setQuantityChange] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    const fetchProducts = async () => {\r\n        try {\r\n            const response = await fetch('/api/products');\r\n            if (!response.ok) throw new Error('Failed to fetch products');\r\n            const data = await response.json();\r\n            setProducts(data);\r\n            localStorage.setItem('products', JSON.stringify(data));  // Save to localStorage\r\n        } catch (error) {\r\n            console.error(error);\r\n            setErrorMessage('Error fetching products');\r\n        }\r\n    };\r\n\r\n    const handleSaveProduct = async () => {\r\n        const updatedProduct = { ...product, quantity: parseInt(product.quantity, 10) || 0 };\r\n        try {\r\n            let response;\r\n            if (editingIndex !== null) {\r\n                // Update existing product\r\n                const productId = products[editingIndex].id;\r\n                response = await fetch(`/api/products/${productId}`, {\r\n                    method: 'PUT',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(updatedProduct),\r\n                });\r\n            } else {\r\n                // Create new product\r\n                response = await fetch('/api/products', {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify(updatedProduct),\r\n                });\r\n            }\r\n            if (!response.ok) throw new Error('Failed to save product');\r\n            const data = await response.json();\r\n\r\n            // Update product list\r\n            const updatedProducts = editingIndex !== null\r\n                ? products.map((prod, idx) => idx === editingIndex ? data : prod)\r\n                : [...products, data];\r\n            updateProductsState(updatedProducts);\r\n            resetForm();\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n            setErrorMessage('Error saving product');\r\n        }\r\n    };\r\n\r\n    const handleDeleteProduct = async (index) => {\r\n        const productId = products[index].id;\r\n        try {\r\n            const response = await fetch(`/api/products/${productId}`, { method: 'DELETE' });\r\n            if (!response.ok) throw new Error('Failed to delete product');\r\n            \r\n            const updatedProducts = products.filter((_, i) => i !== index);\r\n            updateProductsState(updatedProducts);\r\n        } catch (error) {\r\n            console.error(error);\r\n            setErrorMessage('Error deleting product');\r\n        }\r\n    };\r\n\r\n    const handleQuantityChange = async (index, changeType) => {\r\n        const quantityChangeValue = parseInt(quantityChange, 10);\r\n        if (isNaN(quantityChangeValue) || quantityChangeValue <= 0) {\r\n            alert(\"Please enter a valid quantity to add or deduct.\");\r\n            return;\r\n        }\r\n\r\n        const updatedQuantity = changeType === 'add'\r\n            ? products[index].quantity + quantityChangeValue\r\n            : products[index].quantity - quantityChangeValue;\r\n\r\n        if (updatedQuantity < 0) {\r\n            alert(\"Quantity cannot be less than 0.\");\r\n            return;\r\n        }\r\n\r\n        const productId = products[index].id;\r\n\r\n        try {\r\n            const response = await fetch(`/api/products/${productId}`, {\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ quantity: updatedQuantity }),\r\n            });\r\n            if (!response.ok) throw new Error('Failed to update quantity');\r\n            \r\n            const updatedProduct = await response.json();\r\n            const updatedProducts = products.map((prod, idx) => idx === index ? updatedProduct : prod);\r\n            updateProductsState(updatedProducts);\r\n            setQuantityChange('');\r\n        } catch (error) {\r\n            console.error(error);\r\n            setErrorMessage('Error updating quantity');\r\n        }\r\n    };\r\n\r\n    const updateProductsState = (updatedProducts) => {\r\n        setProducts(updatedProducts);\r\n        localStorage.setItem('products', JSON.stringify(updatedProducts));\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setProduct({ name: '', category: '', price: '', quantity: '' });\r\n        setEditingIndex(null);\r\n        setErrorMessage('');\r\n    };\r\n\r\n    const handleEditProduct = (index) => {\r\n        const productToEdit = products[index];\r\n        setProduct({\r\n            name: productToEdit.name,\r\n            category: productToEdit.category,\r\n            price: productToEdit.price,\r\n            quantity: productToEdit.quantity.toString(),\r\n        });\r\n        setEditingIndex(index);\r\n    };\r\n\r\n    const inputStyle = {\r\n        padding: '8px',\r\n        margin: '10px 0',\r\n        width: '100%',\r\n        border: '1px solid #ccc',\r\n        borderRadius: '4px',\r\n    };\r\n\r\n    const buttonStyle = {\r\n        padding: '10px 20px',\r\n        backgroundColor: '#4CAF50',\r\n        color: 'white',\r\n        border: 'none',\r\n        borderRadius: '4px',\r\n        cursor: 'pointer',\r\n    };\r\n\r\n    const tableStyle = {\r\n        width: '100%',\r\n        borderCollapse: 'collapse',\r\n        marginTop: '20px',\r\n    };\r\n\r\n    const actionButtonStyle = {\r\n        padding: '5px 10px',\r\n        marginRight: '5px',\r\n        backgroundColor: '#f0ad4e',\r\n        color: 'white',\r\n        border: 'none',\r\n        borderRadius: '4px',\r\n        cursor: 'pointer',\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: '20px', maxWidth: '800px', margin: '0 auto' }}>\r\n            <h2 style={{ textAlign: 'center', marginBottom: '20px' }}>\r\n                {editingIndex !== null ? 'Edit Product' : 'Add New Product'}\r\n            </h2>\r\n            {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n\r\n            {/* Product form */}\r\n            <input\r\n                value={product.name}\r\n                onChange={e => setProduct({ ...product, name: e.target.value })}\r\n                placeholder=\"Product Name\"\r\n                style={inputStyle}\r\n            />\r\n            <input\r\n                value={product.category}\r\n                onChange={e => setProduct({ ...product, category: e.target.value })}\r\n                placeholder=\"Category\"\r\n                style={inputStyle}\r\n            />\r\n            <input\r\n                value={product.price}\r\n                onChange={e => setProduct({ ...product, price: e.target.value })}\r\n                placeholder=\"Price\"\r\n                style={inputStyle}\r\n            />\r\n            <input\r\n                value={product.quantity}\r\n                onChange={e => setProduct({ ...product, quantity: e.target.value })}\r\n                placeholder=\"Quantity\"\r\n                style={inputStyle}\r\n            />\r\n            <button onClick={handleSaveProduct} style={buttonStyle}>\r\n                {editingIndex !== null ? 'Update Product' : 'Add Product'}\r\n            </button>\r\n\r\n            <h3 style={{ marginTop: '30px' }}>Product List</h3>\r\n            <table style={tableStyle}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Category</th>\r\n                        <th>Price</th>\r\n                        <th>Quantity</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {products.map((prod, index) => (\r\n                        <tr key={index}>\r\n                            <td>{prod.name}</td>\r\n                            <td>{prod.category}</td>\r\n                            <td>{prod.price}</td>\r\n                            <td>{prod.quantity}</td>\r\n                            <td>\r\n                                <button onClick={() => handleEditProduct(index)} style={actionButtonStyle}>Edit</button>\r\n                                <button onClick={() => handleDeleteProduct(index)} style={actionButtonStyle}>Delete</button>\r\n                                <button onClick={() => handleQuantityChange(index, 'add')} style={actionButtonStyle}>Add Quantity</button>\r\n                                <button onClick={() => handleQuantityChange(index, 'deduct')} style={actionButtonStyle}>Deduct Quantity</button>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={quantityChange}\r\n                                    onChange={e => setQuantityChange(e.target.value)}\r\n                                    placeholder=\"Enter qty\"\r\n                                    style={inputStyle}\r\n                                />\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Product;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport 'chart.js/auto';\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\n\r\nconst Dashboard = ({ activeUser, setShowDashboard }) => {\r\n    const [products, setProducts] = useState([]);\r\n    const [totalQuantity, setTotalQuantity] = useState(0);\r\n    const [lowStockProducts, setLowStockProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Fetch products from localStorage\r\n        const storedProducts = JSON.parse(localStorage.getItem('products')) || [];\r\n        setProducts(storedProducts);\r\n\r\n        // Calculate total stock and low-stock products\r\n        const totalQty = storedProducts.reduce((sum, product) => sum + product.quantity, 0);\r\n        setTotalQuantity(totalQty);\r\n\r\n        const lowStock = storedProducts.filter(product => product.quantity < 5); // Example low stock threshold\r\n        setLowStockProducts(lowStock);\r\n    }, []);\r\n\r\n    // Prepare data for the stock graph\r\n    const chartData = {\r\n        labels: products.map(product => product.name),\r\n        datasets: [\r\n            {\r\n                label: 'Quantity in Stock',\r\n                data: products.map(product => product.quantity),\r\n                backgroundColor: 'rgba(54, 162, 235, 0.6)',\r\n                borderColor: 'rgba(54, 162, 235, 1)',\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    const chartOptions = {\r\n        responsive: true,\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n            },\r\n            tooltip: {\r\n                enabled: true,\r\n                callbacks: {\r\n                    label: (context) => `Quantity: ${context.raw}`,\r\n                },\r\n            },\r\n        },\r\n        scales: {\r\n            y: {\r\n                beginAtZero: true,\r\n                title: {\r\n                    display: true,\r\n                    text: 'Quantity',\r\n                },\r\n            },\r\n            x: {\r\n                title: {\r\n                    display: true,\r\n                    text: 'Product Name',\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: '20px', backgroundColor: '#f4f4f4', borderRadius: '8px', maxWidth: '800px', margin: '0 auto' }}>\r\n            <h1 style={{ color: '#333', fontSize: '24px', textAlign: 'center' }}>\r\n                Welcome to Wings Cafe Inventory Management, {activeUser}\r\n            </h1>\r\n\r\n            {/* Stock summary */}\r\n            <div style={{ marginTop: '20px', padding: '15px', backgroundColor: '#fff', borderRadius: '8px', boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)' }}>\r\n                <h2 style={{ color: '#333', fontSize: '20px' }}>Stock Summary</h2>\r\n                <p>Total Products: {products.length}</p>\r\n                <p>Total Stock Quantity: {totalQuantity}</p>\r\n                <p>Low Stock Products:</p>\r\n                <ul>\r\n                    {lowStockProducts.map((product, index) => (\r\n                        <li key={index} style={{ color: 'red' }}>\r\n                            {product.name} - Only {product.quantity} left\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n\r\n            {/* Stock chart */}\r\n            <div style={{ marginTop: '30px', padding: '15px', backgroundColor: '#fff', borderRadius: '8px', boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)' }}>\r\n                <h2 style={{ color: '#333', fontSize: '20px', textAlign: 'center' }}>Stock Quantity Chart</h2>\r\n                <Bar data={chartData} options={chartOptions} />\r\n            </div>\r\n\r\n            {/* Product Image Carousel */}\r\n            <div style={{ marginTop: '30px', padding: '15px', backgroundColor: '#fff', borderRadius: '8px', boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)' }}>\r\n                <h2 style={{ color: '#333', fontSize: '20px', textAlign: 'center' }}>Product Images</h2>\r\n                <Carousel showThumbs={false} autoPlay infiniteLoop>\r\n                    {products.map((product, index) => (\r\n                        <div key={index}>\r\n                            <img src={product.imageUrl || 'https://via.placeholder.com/150'} alt={product.name} />\r\n                            <p className=\"legend\">{product.name} - Quantity: {product.quantity}</p>\r\n                        </div>\r\n                    ))}\r\n                </Carousel>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nfunction UserManagement({ users, setUsers }) {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [editingIndex, setEditingIndex] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Make sure users are loaded from localStorage when the component mounts\r\n        const storedUsers = JSON.parse(localStorage.getItem('users')) || [];\r\n        setUsers(storedUsers);\r\n    }, [setUsers]);\r\n\r\n    const handleAddOrUpdateUser = () => {\r\n        const newUser = { username, password, email };\r\n        \r\n        if (editingIndex !== null) {\r\n            // Update existing user\r\n            const updatedUsers = [...users];\r\n            updatedUsers[editingIndex] = newUser;\r\n            setUsers(updatedUsers);\r\n            localStorage.setItem('users', JSON.stringify(updatedUsers));\r\n        } else {\r\n            // Add new user\r\n            const updatedUsers = [...users, newUser];\r\n            setUsers(updatedUsers);\r\n            localStorage.setItem('users', JSON.stringify(updatedUsers));\r\n        }\r\n        \r\n        resetForm();\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setUsername('');\r\n        setPassword('');\r\n        setEmail('');\r\n        setEditingIndex(null);\r\n    };\r\n\r\n    const editUser = index => {\r\n        setUsername(users[index].username);\r\n        setPassword(users[index].password);\r\n        setEmail(users[index].email);\r\n        setEditingIndex(index);\r\n    };\r\n\r\n    const deleteUser = index => {\r\n        const updatedUsers = users.filter((_, i) => i !== index);\r\n        setUsers(updatedUsers);\r\n        localStorage.setItem('users', JSON.stringify(updatedUsers));\r\n    };\r\n\r\n    // Inline styles\r\n    const containerStyle = {\r\n        padding: '20px',\r\n        backgroundColor: '#f4f4f4',\r\n        borderRadius: '8px',\r\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n        width: '800px',\r\n        margin: 'auto',\r\n    };\r\n\r\n    const inputStyle = {\r\n        marginBottom: '10px',\r\n        padding: '8px',\r\n        width: '100%',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '4px',\r\n        border: '1px solid #ccc',\r\n    };\r\n\r\n    const buttonStyle = {\r\n        backgroundColor: '#007bff',\r\n        color: 'white',\r\n        padding: '10px 20px',\r\n        border: 'none',\r\n        borderRadius: '4px',\r\n        cursor: 'pointer',\r\n        width: '100%',\r\n        marginTop: '10px',\r\n    };\r\n\r\n    const userCardStyle = {\r\n        backgroundColor: '#ffffff',\r\n        padding: '15px',\r\n        borderRadius: '8px',\r\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\r\n        marginBottom: '10px',\r\n    };\r\n\r\n    const headingStyle = {\r\n        textAlign: 'center',\r\n        color: '#333',\r\n    };\r\n\r\n    const listStyle = {\r\n        listStyleType: 'none',\r\n        paddingLeft: '0',\r\n    };\r\n\r\n    const buttonContainerStyle = {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        gap: '10px', // Adds space between buttons\r\n        marginTop: '10px',\r\n    };\r\n\r\n    return (\r\n        <div style={containerStyle}>\r\n            <h2 style={headingStyle}>User Management</h2>\r\n\r\n            {/* User Form */}\r\n            <input\r\n                value={username}\r\n                onChange={e => setUsername(e.target.value)}\r\n                placeholder=\"Username\"\r\n                style={inputStyle}\r\n            />\r\n            <input\r\n                value={password}\r\n                onChange={e => setPassword(e.target.value)}\r\n                placeholder=\"Password\"\r\n                style={inputStyle}\r\n            />\r\n            <input\r\n                value={email}\r\n                onChange={e => setEmail(e.target.value)}\r\n                placeholder=\"Email\"\r\n                style={inputStyle}\r\n            />\r\n            <button onClick={handleAddOrUpdateUser} style={buttonStyle}>\r\n                {editingIndex !== null ? 'Update' : 'Add'} User\r\n            </button>\r\n\r\n            <h3 style={headingStyle}>User List</h3>\r\n            {users.length === 0 ? (\r\n                <p style={{ textAlign: 'center' }}>No users available.</p>\r\n            ) : (\r\n                <ul style={listStyle}>\r\n                    {users.map((user, index) => (\r\n                        <li key={index} style={userCardStyle}>\r\n                            <h4>{user.username}</h4>\r\n                            <p>Email: {user.email}</p>\r\n                            {/* Align Edit and Delete buttons */}\r\n                            <div style={buttonContainerStyle}>\r\n                                <button\r\n                                    onClick={() => editUser(index)}\r\n                                    style={{ ...buttonStyle, backgroundColor: '#007bff', width: 'auto' }}\r\n                                >\r\n                                    Edit\r\n                                </button>\r\n                                <button\r\n                                    onClick={() => deleteUser(index)}\r\n                                    style={{ ...buttonStyle, backgroundColor: '#e74c3c', width: 'auto' }}\r\n                                >\r\n                                    Delete\r\n                                </button>\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserManagement;\r\n","import React, { useState, useEffect } from 'react';\nimport { Route, Routes, Navigate, useNavigate } from 'react-router-dom';\nimport Login from './login';\nimport ProductManagement from './ProductManagement';\nimport Dashboard from './Dashboard';\nimport UserManagement from './UserManagement';\n\nfunction App() {\n    const [users, setUsers] = useState([]);\n    const [products, setProducts] = useState([]);\n    const [activeUser, setActiveUser] = useState(null);\n    const [showSection, setShowSection] = useState('login');\n    const [loading, setLoading] = useState(false);\n\n    const navigate = useNavigate();\n\n    // Helper function to fetch data from the backend\n    const fetchData = async (endpoint, setState) => {\n        try {\n            setLoading(true);\n            const response = await fetch(endpoint);\n            if (!response.ok) throw new Error(`Failed to fetch ${endpoint}`);\n            const data = await response.json();\n            setState(data);\n        } catch (error) {\n            console.error(`Error fetching ${endpoint}:`, error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Fetch users and products on initial load\n    useEffect(() => {\n        fetchData('/api/users', setUsers);\n        fetchData('/api/products', setProducts);\n    }, []);\n\n    // Persist active user to localStorage and sync with backend\n    useEffect(() => {\n        if (activeUser) {\n            localStorage.setItem('activeUser', JSON.stringify(activeUser));\n        } else {\n            localStorage.removeItem('activeUser');\n        }\n    }, [activeUser]);\n\n    // Logout function\n    const logout = async () => {\n        try {\n            setLoading(true);\n            await fetch('/api/logout', { method: 'POST' });\n            setActiveUser(null);\n            localStorage.removeItem('activeUser');\n            alert('You have been logged out.');\n            navigate('/');\n        } catch (error) {\n            console.error('Error logging out:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            {/* Navigation bar visible only when user is logged in */}\n            {activeUser && (\n                <nav style={navStyle}>\n                    <button onClick={() => navigate('/dashboard')} style={buttonStyle}>Dashboard</button>\n                    <button onClick={() => navigate('/productManagement')} style={buttonStyle}>Product Management</button>\n                    <button onClick={() => navigate('/userManagement')} style={buttonStyle}>User Management</button>\n                    <button onClick={logout} style={logoutButtonStyle}>Logout</button>\n                </nav>\n            )}\n\n            {/* Display loading indicator */}\n            {loading && <p>Loading...</p>}\n\n            <Routes>\n                <Route\n                    path=\"/\"\n                    element={\n                        activeUser ? (\n                            <Navigate to=\"/dashboard\" />\n                        ) : (\n                            <Login \n                                setActiveUser={setActiveUser} \n                                users={users} \n                                setShowSection={setShowSection} \n                                showSection={showSection} \n                            />\n                        )\n                    }\n                />\n\n                {/* Protected routes */}\n                <Route\n                    path=\"/dashboard\"\n                    element={activeUser ? <Dashboard products={products} /> : <Navigate to=\"/\" />}\n                />\n                <Route\n                    path=\"/productManagement\"\n                    element={\n                        activeUser ? (\n                            <ProductManagement setProducts={setProducts} products={products} />\n                        ) : (\n                            <Navigate to=\"/\" />\n                        )\n                    }\n                />\n                <Route\n                    path=\"/userManagement\"\n                    element={\n                        activeUser ? (\n                            <UserManagement users={users} setUsers={setUsers} />\n                        ) : (\n                            <Navigate to=\"/\" />\n                        )\n                    }\n                />\n                <Route path=\"/logout\" element={<div onClick={logout}>Logging out...</div>} />\n            </Routes>\n        </div>\n    );\n}\n\n// Inline styles for navigation\nconst navStyle = {\n    display: 'flex',\n    justifyContent: 'center',\n    gap: '15px',\n    marginBottom: '20px',\n    backgroundColor: '#f4f4f4',\n    padding: '10px 0',\n};\n\nconst buttonStyle = {\n    backgroundColor: '#4CAF50',\n    color: 'white',\n    padding: '10px 20px',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    fontSize: '16px',\n    transition: 'background-color 0.3s',\n};\n\nconst logoutButtonStyle = {\n    backgroundColor: '#f44336',\n    color: 'white',\n    padding: '10px 20px',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    fontSize: '16px',\n    transition: 'background-color 0.3s',\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter as Router } from 'react-router-dom'; // Import Router\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}